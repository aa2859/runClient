#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace testM_client
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QCTEST")]
	public partial class testRunDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertM_deviceConfig(M_deviceConfig instance);
    partial void UpdateM_deviceConfig(M_deviceConfig instance);
    partial void DeleteM_deviceConfig(M_deviceConfig instance);
    partial void InsertM_application(M_application instance);
    partial void UpdateM_application(M_application instance);
    partial void DeleteM_application(M_application instance);
    partial void InsertM_runTestCase(M_runTestCase instance);
    partial void UpdateM_runTestCase(M_runTestCase instance);
    partial void DeleteM_runTestCase(M_runTestCase instance);
    partial void InsertM_testDemand(M_testDemand instance);
    partial void UpdateM_testDemand(M_testDemand instance);
    partial void DeleteM_testDemand(M_testDemand instance);
    partial void InsertM_runScene(M_runScene instance);
    partial void UpdateM_runScene(M_runScene instance);
    partial void DeleteM_runScene(M_runScene instance);
    #endregion
		
		public testRunDataDataContext() : 
				base(global::testM_client.Properties.Settings.Default.QCTESTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public testRunDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testRunDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testRunDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testRunDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<M_deviceConfig> M_deviceConfig
		{
			get
			{
				return this.GetTable<M_deviceConfig>();
			}
		}
		
		public System.Data.Linq.Table<M_application> M_application
		{
			get
			{
				return this.GetTable<M_application>();
			}
		}
		
		public System.Data.Linq.Table<M_runTestCase> M_runTestCase
		{
			get
			{
				return this.GetTable<M_runTestCase>();
			}
		}
		
		public System.Data.Linq.Table<M_testDemand> M_testDemand
		{
			get
			{
				return this.GetTable<M_testDemand>();
			}
		}
		
		public System.Data.Linq.Table<M_runScene> M_runScene
		{
			get
			{
				return this.GetTable<M_runScene>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_deviceConfig")]
	public partial class M_deviceConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IP;
		
		private System.Nullable<int> _Port;
		
		private string _device;
		
		private string _mark;
		
		private EntitySet<M_runScene> _M_runScene;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OndeviceChanging(string value);
    partial void OndeviceChanged();
    partial void OnmarkChanging(string value);
    partial void OnmarkChanged();
    #endregion
		
		public M_deviceConfig()
		{
			this._M_runScene = new EntitySet<M_runScene>(new Action<M_runScene>(this.attach_M_runScene), new Action<M_runScene>(this.detach_M_runScene));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(20)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_device", DbType="NVarChar(20)")]
		public string device
		{
			get
			{
				return this._device;
			}
			set
			{
				if ((this._device != value))
				{
					this.OndeviceChanging(value);
					this.SendPropertyChanging();
					this._device = value;
					this.SendPropertyChanged("device");
					this.OndeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="NVarChar(50)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_deviceConfig_M_runScene", Storage="_M_runScene", ThisKey="ID", OtherKey="deviceID")]
		public EntitySet<M_runScene> M_runScene
		{
			get
			{
				return this._M_runScene;
			}
			set
			{
				this._M_runScene.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_runScene(M_runScene entity)
		{
			this.SendPropertyChanging();
			entity.M_deviceConfig = this;
		}
		
		private void detach_M_runScene(M_runScene entity)
		{
			this.SendPropertyChanging();
			entity.M_deviceConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_application")]
	public partial class M_application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _mark;
		
		private string _runApkName;
		
		private string _package;
		
		private string _mainActiviy;
		
		private string _package2;
		
		private System.Nullable<bool> _isClear;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmarkChanging(string value);
    partial void OnmarkChanged();
    partial void OnrunApkNameChanging(string value);
    partial void OnrunApkNameChanged();
    partial void OnpackageChanging(string value);
    partial void OnpackageChanged();
    partial void OnmainActiviyChanging(string value);
    partial void OnmainActiviyChanged();
    partial void Onpackage2Changing(string value);
    partial void Onpackage2Changed();
    partial void OnisClearChanging(System.Nullable<bool> value);
    partial void OnisClearChanged();
    #endregion
		
		public M_application()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="NVarChar(100)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runApkName", DbType="NVarChar(50)")]
		public string runApkName
		{
			get
			{
				return this._runApkName;
			}
			set
			{
				if ((this._runApkName != value))
				{
					this.OnrunApkNameChanging(value);
					this.SendPropertyChanging();
					this._runApkName = value;
					this.SendPropertyChanged("runApkName");
					this.OnrunApkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_package", DbType="NVarChar(50)")]
		public string package
		{
			get
			{
				return this._package;
			}
			set
			{
				if ((this._package != value))
				{
					this.OnpackageChanging(value);
					this.SendPropertyChanging();
					this._package = value;
					this.SendPropertyChanged("package");
					this.OnpackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mainActiviy", DbType="NVarChar(50)")]
		public string mainActiviy
		{
			get
			{
				return this._mainActiviy;
			}
			set
			{
				if ((this._mainActiviy != value))
				{
					this.OnmainActiviyChanging(value);
					this.SendPropertyChanging();
					this._mainActiviy = value;
					this.SendPropertyChanged("mainActiviy");
					this.OnmainActiviyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_package2", DbType="NVarChar(50)")]
		public string package2
		{
			get
			{
				return this._package2;
			}
			set
			{
				if ((this._package2 != value))
				{
					this.Onpackage2Changing(value);
					this.SendPropertyChanging();
					this._package2 = value;
					this.SendPropertyChanged("package2");
					this.Onpackage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isClear", DbType="Bit")]
		public System.Nullable<bool> isClear
		{
			get
			{
				return this._isClear;
			}
			set
			{
				if ((this._isClear != value))
				{
					this.OnisClearChanging(value);
					this.SendPropertyChanging();
					this._isClear = value;
					this.SendPropertyChanged("isClear");
					this.OnisClearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_runTestCase")]
	public partial class M_runTestCase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private System.Xml.Linq.XElement _testXML;
		
		private System.Nullable<int> _sceneID;
		
		private System.Xml.Linq.XElement _resultXML;
		
		private System.Nullable<int> _state;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private string _resultPath;
		
		private EntityRef<M_runScene> _M_runScene;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntestXMLChanging(System.Xml.Linq.XElement value);
    partial void OntestXMLChanged();
    partial void OnsceneIDChanging(System.Nullable<int> value);
    partial void OnsceneIDChanged();
    partial void OnresultXMLChanging(System.Xml.Linq.XElement value);
    partial void OnresultXMLChanged();
    partial void OnstateChanging(System.Nullable<int> value);
    partial void OnstateChanged();
    partial void OnstartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateChanged();
    partial void OnresultPathChanging(string value);
    partial void OnresultPathChanged();
    #endregion
		
		public M_runTestCase()
		{
			this._M_runScene = default(EntityRef<M_runScene>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testXML", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement testXML
		{
			get
			{
				return this._testXML;
			}
			set
			{
				if ((this._testXML != value))
				{
					this.OntestXMLChanging(value);
					this.SendPropertyChanging();
					this._testXML = value;
					this.SendPropertyChanged("testXML");
					this.OntestXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sceneID", DbType="Int")]
		public System.Nullable<int> sceneID
		{
			get
			{
				return this._sceneID;
			}
			set
			{
				if ((this._sceneID != value))
				{
					if (this._M_runScene.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsceneIDChanging(value);
					this.SendPropertyChanging();
					this._sceneID = value;
					this.SendPropertyChanged("sceneID");
					this.OnsceneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultXML", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement resultXML
		{
			get
			{
				return this._resultXML;
			}
			set
			{
				if ((this._resultXML != value))
				{
					this.OnresultXMLChanging(value);
					this.SendPropertyChanging();
					this._resultXML = value;
					this.SendPropertyChanged("resultXML");
					this.OnresultXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultPath", DbType="NVarChar(50)")]
		public string resultPath
		{
			get
			{
				return this._resultPath;
			}
			set
			{
				if ((this._resultPath != value))
				{
					this.OnresultPathChanging(value);
					this.SendPropertyChanging();
					this._resultPath = value;
					this.SendPropertyChanged("resultPath");
					this.OnresultPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_runScene_M_runTestCase", Storage="_M_runScene", ThisKey="sceneID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public M_runScene M_runScene
		{
			get
			{
				return this._M_runScene.Entity;
			}
			set
			{
				M_runScene previousValue = this._M_runScene.Entity;
				if (((previousValue != value) 
							|| (this._M_runScene.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_runScene.Entity = null;
						previousValue.M_runTestCase.Remove(this);
					}
					this._M_runScene.Entity = value;
					if ((value != null))
					{
						value.M_runTestCase.Add(this);
						this._sceneID = value.ID;
					}
					else
					{
						this._sceneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("M_runScene");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_testDemand")]
	public partial class M_testDemand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _mark;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _type;
		
		private System.Nullable<int> _baseID;
		
		private System.Nullable<bool> _isRun;
		
		private System.Nullable<System.DateTime> _runDate;
		
		private System.Nullable<bool> _visable;
		
		private string _apkName;
		
		private EntitySet<M_testDemand> _M_testDemand2;
		
		private EntitySet<M_runScene> _M_runScene;
		
		private EntityRef<M_testDemand> _M_testDemand1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmarkChanging(string value);
    partial void OnmarkChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OnbaseIDChanging(System.Nullable<int> value);
    partial void OnbaseIDChanged();
    partial void OnisRunChanging(System.Nullable<bool> value);
    partial void OnisRunChanged();
    partial void OnrunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnrunDateChanged();
    partial void OnvisableChanging(System.Nullable<bool> value);
    partial void OnvisableChanged();
    partial void OnapkNameChanging(string value);
    partial void OnapkNameChanged();
    #endregion
		
		public M_testDemand()
		{
			this._M_testDemand2 = new EntitySet<M_testDemand>(new Action<M_testDemand>(this.attach_M_testDemand2), new Action<M_testDemand>(this.detach_M_testDemand2));
			this._M_runScene = new EntitySet<M_runScene>(new Action<M_runScene>(this.attach_M_runScene), new Action<M_runScene>(this.detach_M_runScene));
			this._M_testDemand1 = default(EntityRef<M_testDemand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="NVarChar(100)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseID", DbType="Int")]
		public System.Nullable<int> baseID
		{
			get
			{
				return this._baseID;
			}
			set
			{
				if ((this._baseID != value))
				{
					if (this._M_testDemand1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseIDChanging(value);
					this.SendPropertyChanging();
					this._baseID = value;
					this.SendPropertyChanged("baseID");
					this.OnbaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRun", DbType="Bit")]
		public System.Nullable<bool> isRun
		{
			get
			{
				return this._isRun;
			}
			set
			{
				if ((this._isRun != value))
				{
					this.OnisRunChanging(value);
					this.SendPropertyChanging();
					this._isRun = value;
					this.SendPropertyChanged("isRun");
					this.OnisRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> runDate
		{
			get
			{
				return this._runDate;
			}
			set
			{
				if ((this._runDate != value))
				{
					this.OnrunDateChanging(value);
					this.SendPropertyChanging();
					this._runDate = value;
					this.SendPropertyChanged("runDate");
					this.OnrunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visable", DbType="Bit")]
		public System.Nullable<bool> visable
		{
			get
			{
				return this._visable;
			}
			set
			{
				if ((this._visable != value))
				{
					this.OnvisableChanging(value);
					this.SendPropertyChanging();
					this._visable = value;
					this.SendPropertyChanged("visable");
					this.OnvisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apkName", DbType="NVarChar(100)")]
		public string apkName
		{
			get
			{
				return this._apkName;
			}
			set
			{
				if ((this._apkName != value))
				{
					this.OnapkNameChanging(value);
					this.SendPropertyChanging();
					this._apkName = value;
					this.SendPropertyChanged("apkName");
					this.OnapkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_testDemand_M_testDemand", Storage="_M_testDemand2", ThisKey="ID", OtherKey="baseID")]
		public EntitySet<M_testDemand> M_testDemand2
		{
			get
			{
				return this._M_testDemand2;
			}
			set
			{
				this._M_testDemand2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_testDemand_M_runScene", Storage="_M_runScene", ThisKey="ID", OtherKey="DemandID")]
		public EntitySet<M_runScene> M_runScene
		{
			get
			{
				return this._M_runScene;
			}
			set
			{
				this._M_runScene.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_testDemand_M_testDemand", Storage="_M_testDemand1", ThisKey="baseID", OtherKey="ID", IsForeignKey=true)]
		public M_testDemand M_testDemand1
		{
			get
			{
				return this._M_testDemand1.Entity;
			}
			set
			{
				M_testDemand previousValue = this._M_testDemand1.Entity;
				if (((previousValue != value) 
							|| (this._M_testDemand1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_testDemand1.Entity = null;
						previousValue.M_testDemand2.Remove(this);
					}
					this._M_testDemand1.Entity = value;
					if ((value != null))
					{
						value.M_testDemand2.Add(this);
						this._baseID = value.ID;
					}
					else
					{
						this._baseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("M_testDemand1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_testDemand2(M_testDemand entity)
		{
			this.SendPropertyChanging();
			entity.M_testDemand1 = this;
		}
		
		private void detach_M_testDemand2(M_testDemand entity)
		{
			this.SendPropertyChanging();
			entity.M_testDemand1 = null;
		}
		
		private void attach_M_runScene(M_runScene entity)
		{
			this.SendPropertyChanging();
			entity.M_testDemand = this;
		}
		
		private void detach_M_runScene(M_runScene entity)
		{
			this.SendPropertyChanging();
			entity.M_testDemand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M_runScene")]
	public partial class M_runScene : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _mark;
		
		private System.Nullable<int> _creatUser;
		
		private System.Nullable<System.DateTime> _creatDate;
		
		private System.Nullable<int> _deviceID;
		
		private System.Nullable<int> _DemandID;
		
		private string _installResult;
		
		private EntitySet<M_runTestCase> _M_runTestCase;
		
		private EntityRef<M_deviceConfig> _M_deviceConfig;
		
		private EntityRef<M_testDemand> _M_testDemand;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmarkChanging(string value);
    partial void OnmarkChanged();
    partial void OncreatUserChanging(System.Nullable<int> value);
    partial void OncreatUserChanged();
    partial void OncreatDateChanging(System.Nullable<System.DateTime> value);
    partial void OncreatDateChanged();
    partial void OndeviceIDChanging(System.Nullable<int> value);
    partial void OndeviceIDChanged();
    partial void OnDemandIDChanging(System.Nullable<int> value);
    partial void OnDemandIDChanged();
    partial void OninstallResultChanging(string value);
    partial void OninstallResultChanged();
    #endregion
		
		public M_runScene()
		{
			this._M_runTestCase = new EntitySet<M_runTestCase>(new Action<M_runTestCase>(this.attach_M_runTestCase), new Action<M_runTestCase>(this.detach_M_runTestCase));
			this._M_deviceConfig = default(EntityRef<M_deviceConfig>);
			this._M_testDemand = default(EntityRef<M_testDemand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="NVarChar(100)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this.OnmarkChanging(value);
					this.SendPropertyChanging();
					this._mark = value;
					this.SendPropertyChanged("mark");
					this.OnmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatUser", DbType="Int")]
		public System.Nullable<int> creatUser
		{
			get
			{
				return this._creatUser;
			}
			set
			{
				if ((this._creatUser != value))
				{
					this.OncreatUserChanging(value);
					this.SendPropertyChanging();
					this._creatUser = value;
					this.SendPropertyChanged("creatUser");
					this.OncreatUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatDate", DbType="Date")]
		public System.Nullable<System.DateTime> creatDate
		{
			get
			{
				return this._creatDate;
			}
			set
			{
				if ((this._creatDate != value))
				{
					this.OncreatDateChanging(value);
					this.SendPropertyChanging();
					this._creatDate = value;
					this.SendPropertyChanged("creatDate");
					this.OncreatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceID", DbType="Int")]
		public System.Nullable<int> deviceID
		{
			get
			{
				return this._deviceID;
			}
			set
			{
				if ((this._deviceID != value))
				{
					if (this._M_deviceConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceIDChanging(value);
					this.SendPropertyChanging();
					this._deviceID = value;
					this.SendPropertyChanged("deviceID");
					this.OndeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandID", DbType="Int")]
		public System.Nullable<int> DemandID
		{
			get
			{
				return this._DemandID;
			}
			set
			{
				if ((this._DemandID != value))
				{
					if (this._M_testDemand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIDChanging(value);
					this.SendPropertyChanging();
					this._DemandID = value;
					this.SendPropertyChanged("DemandID");
					this.OnDemandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_installResult", DbType="NVarChar(400)")]
		public string installResult
		{
			get
			{
				return this._installResult;
			}
			set
			{
				if ((this._installResult != value))
				{
					this.OninstallResultChanging(value);
					this.SendPropertyChanging();
					this._installResult = value;
					this.SendPropertyChanged("installResult");
					this.OninstallResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_runScene_M_runTestCase", Storage="_M_runTestCase", ThisKey="ID", OtherKey="sceneID")]
		public EntitySet<M_runTestCase> M_runTestCase
		{
			get
			{
				return this._M_runTestCase;
			}
			set
			{
				this._M_runTestCase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_deviceConfig_M_runScene", Storage="_M_deviceConfig", ThisKey="deviceID", OtherKey="ID", IsForeignKey=true)]
		public M_deviceConfig M_deviceConfig
		{
			get
			{
				return this._M_deviceConfig.Entity;
			}
			set
			{
				M_deviceConfig previousValue = this._M_deviceConfig.Entity;
				if (((previousValue != value) 
							|| (this._M_deviceConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_deviceConfig.Entity = null;
						previousValue.M_runScene.Remove(this);
					}
					this._M_deviceConfig.Entity = value;
					if ((value != null))
					{
						value.M_runScene.Add(this);
						this._deviceID = value.ID;
					}
					else
					{
						this._deviceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("M_deviceConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_testDemand_M_runScene", Storage="_M_testDemand", ThisKey="DemandID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public M_testDemand M_testDemand
		{
			get
			{
				return this._M_testDemand.Entity;
			}
			set
			{
				M_testDemand previousValue = this._M_testDemand.Entity;
				if (((previousValue != value) 
							|| (this._M_testDemand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_testDemand.Entity = null;
						previousValue.M_runScene.Remove(this);
					}
					this._M_testDemand.Entity = value;
					if ((value != null))
					{
						value.M_runScene.Add(this);
						this._DemandID = value.ID;
					}
					else
					{
						this._DemandID = default(Nullable<int>);
					}
					this.SendPropertyChanged("M_testDemand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_runTestCase(M_runTestCase entity)
		{
			this.SendPropertyChanging();
			entity.M_runScene = this;
		}
		
		private void detach_M_runTestCase(M_runTestCase entity)
		{
			this.SendPropertyChanging();
			entity.M_runScene = null;
		}
	}
}
#pragma warning restore 1591
